apiVersion: v1
kind: Namespace
metadata:
  name: k8s-admin
  labels:
    name: k8s-admin

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-mcp-service-account
  namespace: k8s-admin
  labels:
    aws.amazon.com/eks-pod-identity-association: k8s-mcp-pod-identity

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-mcp-cluster-role
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "namespaces", "events", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "patch", "update"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "patch", "update", "delete"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-mcp-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-mcp-cluster-role
subjects:
- kind: ServiceAccount
  name: k8s-mcp-service-account
  namespace: k8s-admin

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-mcp
  namespace: k8s-admin
spec:
  replicas: {{ .Values.services.k8sMcp.replicas }}
  selector:
    matchLabels:
      app: k8s-mcp
  template:
    metadata:
      labels:
        app: k8s-mcp
    spec:
      serviceAccountName: k8s-mcp-service-account
      containers:
      - name: k8s-mcp
        image: {{ .Values.registry }}/{{ .Values.services.k8sMcp.image }}
        ports:
        - containerPort: {{ .Values.services.k8sMcp.port }}
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.services.k8sMcp.port }}
          initialDelaySeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.services.k8sMcp.port }}
          initialDelaySeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-mcp-service
  namespace: k8s-admin
  labels:
    app: agentic-platform
spec:
  selector:
    app: k8s-mcp
  ports:
  - name: http
    port: 80
    targetPort: {{ .Values.services.k8sMcp.port }}
  type: ClusterIP